(declare-fun c0 () Bool)
(declare-fun E0 () Bool)
(declare-fun f0 () Bool)
(declare-fun f1 () Bool)
(push 1)
(assert (let ((.def_11 (not E0)) (.def_12 (not f1))) (+ .def_11 .def_12) ) ) 
(assert (let ((.def_10 (not f0))) .def_10))
(check-sat)
(pop 1)
(assert (xor f0 f1))
(push 1)
(assert (and (and a b)))
(assert (and z y x (and a b) a b d (< 5 6) a s d (or a c) ))
(assert (and z y x (and a b) a b d (and b c) a s d (and a c) ))
(assert (and c0 E0 (not f1)))
(check-sat)
(pop 1)
(check-sat)
(exit)

